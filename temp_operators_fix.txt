// V1: Structural Execution Operators  
const OPERATORS = [
  {
    id: "H",
    name: "Unbreakable Constraint",
    fullName: "Unbreakable Constraint",
    weight: 0.34,
    symbol: "H",
    glyph: "‚¨õ",
    affects: ["L", "P", "V"],
    position_sensitive: true,
    override_targets: [],
    color: "#10B981",
    description: "Unbreakable Constraint defines a boundary that cannot be crossed or dissolved from within the system, no matter what other operators are invoked. It requires an external, independent actor‚Äîoften a regulator, court, or sovereign authority‚Äîto permit an exception or breach, and even then only under conditions that are hard-coded and immutable. This operator represents true structural friction: it is the only reliable defense against capture or override, because it is designed to be non-negotiable and to survive attempts at internal nullification or simulation. In institutional logic, genuine unbreakable constraints are rare and valuable, marking the difference between simulated compliance and actual legal or operational immovability. Where most controls can be circumvented through sophisticated clause sequencing or discretionary override, an unbreakable constraint draws an absolute line, forcing all actors to operate within its bounds or face existential system breakdown.",
    calculation: {
      formula: "œï(H) = 0.34¬∑H + 0.05¬∑S + 0.17¬∑B + 0.04¬∑W + Œ≥(Seq,ùìî)",
      weights: { w1: 0.34, w2: 0.05, w3: 0.17, w4: 0.04 },
      variables: {
        H: "Hard operator intensity coefficient",
        S: "Soft operator configuration depth", 
        B: "Black operator masking strength",
        W: "White operator transparency level",
        gamma: "Environmental context modifier"
      }
    },
    impact: "Creates immutable structural boundaries that resist all override attempts."
  },
  {
    id: "O", 
    name: "Override",
    fullName: "Override",
    weight: 0.24,
    symbol: "O",
    glyph: "‚äó",
    affects: ["L", "P", "V"],
    position_sensitive: true,
    override_targets: ["H", "XT", "F", "I"],
    color: "#EF4444", 
    description: "Override is a structural operator that allows any previously established rule, safeguard, or procedure to be suspended or bypassed at a single decision point, typically by an actor granted exceptional authority or via a clause that explicitly nullifies prior constraints. When present, this operator acts as the system's escape valve‚Äîturning hard rules into soft preferences by permitting discretionary exceptions regardless of the surrounding structure. In practice, overrides are often embedded as \"notwithstanding\" clauses, emergency provisions, or catch-all authorizations, making them the prime mechanism for legal extraction, regulatory evasion, or late-stage risk injection. The presence of an override transforms the entire risk profile of a system: it signals that no matter how many controls are built in, a single invocation can route around them, erasing the boundary between compliance and discretionary power. This operator is the true test of whether a system's constraints are real or merely provisional.",
    calculation: {
      formula: "œï(O) = 0.24¬∑H + 0.15¬∑S + 0.27¬∑B + 0.04¬∑W + Œ≥(Seq,ùìî)",
      weights: { w1: 0.24, w2: 0.15, w3: 0.27, w4: 0.04 },
      variables: {
        H: "Hard operator intensity coefficient",
        S: "Soft operator configuration depth",
        B: "Black operator masking strength", 
        W: "White operator transparency level",
        gamma: "Override sequence context modifier"
      }
    },
    impact: "Enables systematic bypass of established constraints and procedures."
  },
  {
    id: "XT",
    name: "Extraction/Transfer", 
    fullName: "Extraction/Transfer",
    weight: 0.13,
    symbol: "XT",
    glyph: "‚ß¨",
    affects: ["A", "R", "L"],
    position_sensitive: true,
    override_targets: ["V"],
    color: "#8B5CF6",
    description: "Extraction/Transfer is the core operator through which value, risk, decision rights, or liability are structurally moved out of the originating system, either to external entities, hidden intermediaries, or parallel structures. It operates regardless of surface compliance: whenever a contract, statute, or policy grants the right to shift money, responsibility, or control beyond the oversight boundary, this operator is in play. Extraction may be explicit (fees to an offshore partner, liability shifted to a subcontractor) or disguised (service flows through opaque SPVs), but in every case it severs the internal chain of accountability. This operator is what transforms system resilience into system exposure: once activated, internal safeguards, audits, or rules have no purchase over the extracted asset or risk. In governance and procurement, repeated application of extraction/transfer is the primary channel for laundering, asset flight, or regulatory arbitrage.",
    calculation: {
      formula: "œï(XT) = 0.13¬∑H + 0.16¬∑S + 0.20¬∑B + 0.07¬∑W + Œ≥(Seq,ùìî)",
      weights: { w1: 0.13, w2: 0.16, w3: 0.2, w4: 0.07 },
      variables: {
        H: "Hard operator intensity coefficient",
        S: "Soft operator configuration depth",
        B: "Black operator masking strength",
        W: "White operator transparency level", 
        gamma: "Transfer pathway complexity modifier"
      }
    },
    impact: "Moves value, risk, or control beyond oversight boundaries."
  },
  {
    id: "F",
    name: "Fracture",
    fullName: "Fracture", 
    weight: 0.09,
    symbol: "F",
    glyph: "‚ö¨",
    affects: ["Œµ", "P", "A"],
    position_sensitive: true,
    override_targets: ["R"],
    color: "#F59E0B",
    description: "Fracture atomizes accountability by distributing critical process steps, approvals, or decision points across multiple actors, departments, or legal entities in such a way that no one node has full visibility or control. The result is structural ambiguity: each participant can plausibly deny knowledge or responsibility for the system's outcomes, while risk or value moves seamlessly through the gaps. This operator is not simply about \"multiple signatures\" or \"distributed roles\"‚Äîit is about the deliberate engineering of blind spots, so that failure, loss, or extraction cannot be traced to a single decision or clause. Fracture is the backbone of modern institutional evasion: it enables complex laundering, diffuses blame, and makes audit trails meaningless unless re-aggregated with forensic effort. Where fracture is present, even the best oversight bodies are forced to reconstruct the puzzle after the fact, often too late for remediation.",
    calculation: {
      formula: "œï(F) = 0.09¬∑H + 0.12¬∑S + 0.15¬∑B + 0.04¬∑W + Œ≥(Seq,ùìî)",
      weights: { w1: 0.09, w2: 0.12, w3: 0.15, w4: 0.04 },
      variables: {
        H: "Hard operator intensity coefficient",
        S: "Soft operator configuration depth",
        B: "Black operator masking strength", 
        W: "White operator transparency level",
        gamma: "Fragmentation complexity modifier"
      }
    },
    impact: "Distributes accountability across multiple actors to create blind spots."
  },
  {
    id: "I",
    name: "Indirection",
    fullName: "Indirection",
    weight: 0.22,
    symbol: "I", 
    glyph: "‚¶ø",
    affects: ["L", "P", "V"],
    position_sensitive: true,
    override_targets: ["A", "R"],
    color: "#06B6D4",
    description: "Indirection routes control, decision-making, or value through a chain of proxies, affiliates, or off-ledger vehicles to obscure the true path and ultimate beneficiary. Unlike masking, which operates through ambiguity or complexity, indirection creates a formally correct but substantively misleading sequence of actors or steps. Its essence is to break the link between apparent and real control: what appears as an arms-length transaction or compliant process is, in fact, a channel for concealed influence or extraction. Indirection is the favored tool of those seeking to avoid scrutiny‚Äîpolitical actors, oligarchic networks, or multinationals structuring around sanctions or procurement caps. Its detection requires not just reading the contract, but reconstructing the real-world flow of authority, money, or risk through layered intermediaries that are often outside standard audit reach.",
    calculation: {
      formula: "œï(I) = 0.22¬∑H + 0.18¬∑S + 0.25¬∑B + 0.05¬∑W + Œ≥(Seq,ùìî)",
      weights: { w1: 0.22, w2: 0.18, w3: 0.25, w4: 0.05 },
      variables: {
        H: "Hard operator intensity coefficient",
        S: "Soft operator configuration depth",
        B: "Black operator masking strength",
        W: "White operator transparency level",
        gamma: "Proxy chain complexity modifier"
      }
    },
    impact: "Routes control through intermediaries to obscure true beneficiaries."
  }
];

// V2: Semantic/Simulation/Pressure Operators
const OPERATORS_V2 = [
  {
    id: "S",
    name: "Simulation", 
    fullName: "Simulation",
    weight: 0.1,
    symbol: "S",
    glyph: "‚üê",
    affects: ["V", "L", "Œµ"],
    position_sensitive: true,
    override_targets: ["A"],
    color: "#06B6D4",
    description: "Simulation transforms structural risk by replicating the surface appearance of compliance, oversight, or procedural integrity without enforcing any actual constraint. This operator is executed through symbolic actions‚Äînon-binding audits, advisory committees, or reviews whose outcomes do not alter the system's real operation. In effect, simulation \"fools\" both internal and external observers: it provides the audit trail, the ritual, and the reporting, yet all actors know the process is performative. Simulation is not mere theater; it is the central defense of advanced captured systems, absorbing pressure from regulators, the public, or oversight bodies while ensuring that true power dynamics remain untouched. When simulation dominates, the system becomes audit-proof and sanction-resistant‚Äînot because it is safe, but because it is semantically and operationally insulated from intervention.",
    calculation: {
      formula: "œï(S) = 0.10¬∑H + 0.02¬∑S + 0.02¬∑B + 0.30¬∑W + Œ≥(Seq,ùìî)",
      weights: { w1: 0.1, w2: 0.02, w3: 0.02, w4: 0.3 },
      variables: {
        H: "Hard operator intensity coefficient",
        S: "Soft operator configuration depth",
        B: "Black operator masking strength",
        W: "White operator transparency level",
        gamma: "Simulation depth modifier"
      }
    },
    impact: "Creates performative compliance without real constraint."
  },
  {
    id: "M",
    name: "Masking",
    fullName: "Masking",
    weight: 0.05,
    symbol: "M", 
    glyph: "‚ß®",
    affects: ["L", "A", "P"],
    position_sensitive: true,
    override_targets: ["R"],
    color: "#F97316",
    description: "Masking is the deliberate obscuring of risk, intent, or extraction logic through layers of legal complexity, ambiguous terminology, or non-transparent structures. Unlike simulation (which creates the appearance of constraint), masking ensures that the system's real operation cannot be reconstructed without insider knowledge or deep forensic analysis. Masking can be achieved via undefined \"strategic partnerships,\" complex cross-border arrangements, or simply by using language that is so broad or nuanced that it resists interpretation. This operator is the engine of legal opacity: it allows extraction or evasion to occur in plain sight, safe behind procedural or technical camouflage. When masking is deployed, even a diligent regulator or auditor may certify compliance while missing the core transformation taking place beneath the legal surface.",
    calculation: {
      formula: "œï(M) = 0.05¬∑H + 0.25¬∑S + 0.33¬∑B + 0.02¬∑W + Œ≥(Seq,ùìî)",
      weights: { w1: 0.05, w2: 0.25, w3: 0.33, w4: 0.02 },
      variables: {
        H: "Hard operator intensity coefficient",
        S: "Soft operator configuration depth", 
        B: "Black operator masking strength",
        W: "White operator transparency level",
        gamma: "Opacity complexity modifier"
      }
    },
    impact: "Obscures real operations through legal and procedural complexity."
  },
  {
    id: "C",
    name: "Compression",
    fullName: "Compression",
    weight: 0.15,
    symbol: "C",
    glyph: "‚äû", 
    affects: ["Œµ", "P", "R"],
    position_sensitive: true,
    override_targets: ["V", "L"],
    color: "#8B5CF6",
    description: "Compression accelerates or condenses decision cycles, procedural stages, or review windows to such a degree that meaningful oversight, contestation, or deliberation becomes structurally impossible. This operator is activated through emergency timelines, stacked deadlines, or forced simultaneity of process‚Äîtools that create an artificial sense of urgency or inevitability. Compression disables the normal operation of checks and balances: by forcing actors to choose or sign off with minimal information and no time for scrutiny, it maximizes the probability of error, oversight, or opportunistic capture. In procurement, policy, or regulation, compression is how \"urgent\" contracts are awarded, how complex reforms are rushed through, and how backdoor risk is laundered into official decisions without opposition.",
    calculation: {
      formula: "œï(C) = 0.15¬∑H + 0.20¬∑S + 0.18¬∑B + 0.03¬∑W + Œ≥(Seq,ùìî)",
      weights: { w1: 0.15, w2: 0.20, w3: 0.18, w4: 0.03 },
      variables: {
        H: "Hard operator intensity coefficient", 
        S: "Soft operator configuration depth",
        B: "Black operator masking strength",
        W: "White operator transparency level",
        gamma: "Timeline compression modifier"
      }
    },
    impact: "Compresses decision timeframes to prevent meaningful oversight."
  },
  {
    id: "R",
    name: "Reinjection",
    fullName: "Reinjection",
    weight: 0.18,
    symbol: "R",
    glyph: "‚ü≤",
    affects: ["L", "A", "V"],
    position_sensitive: true,
    override_targets: ["P", "Œµ"], 
    color: "#EF4444",
    description: "Reinjection brings previously excluded, neutralized, or extracted risk, value, or process back into the system through a new channel, often after surface closure or apparent remediation. This operator allows systems to \"recycle\" loopholes, funds, or structural exposures by rebranding, repackaging, or relaunching them under a different guise. Reinjection is critical in systems with dynamic oversight: whenever a risk pathway appears to have been blocked, but later resurfaces via a different actor, fund, or clause, reinjection is at work. It is the structural answer to \"loophole whack-a-mole\"‚Äîno matter how many times a vulnerability is closed, the logic of reinjection guarantees its return unless the system is hardened at the root.",
    calculation: {
      formula: "œï(R) = 0.18¬∑H + 0.22¬∑S + 0.20¬∑B + 0.06¬∑W + Œ≥(Seq,ùìî)",
      weights: { w1: 0.18, w2: 0.22, w3: 0.20, w4: 0.06 },
      variables: {
        H: "Hard operator intensity coefficient",
        S: "Soft operator configuration depth",
        B: "Black operator masking strength",
        W: "White operator transparency level",
        gamma: "Reinjection pathway modifier"
      }
    },
    impact: "Reintroduces previously neutralized risks through new channels."
  },
  {
    id: "A",
    name: "Aggregation", 
    fullName: "Aggregation",
    weight: 0.12,
    symbol: "A",
    glyph: "‚äï",
    affects: ["P", "L", "R"],
    position_sensitive: true,
    override_targets: ["V", "Œµ"],
    color: "#10B981",
    description: "Aggregation combines multiple minor actions, decisions, or actors‚Äîeach innocuous or low-risk in isolation‚Äîinto an emergent, cumulative exposure that becomes significant only in aggregate. The operator functions invisibly when oversight focuses on thresholds, single transactions, or compartmentalized decisions: by splitting large risk or extraction pathways into a series of small, authorized steps, aggregation achieves the same structural outcome as a single, high-risk move but with none of the visibility or friction. This is the engine of \"smurfing\" in money laundering, serial contract splitting in procurement, or repetitive low-level approvals that bypass systemic limits. Aggregation is difficult to detect except through systemic analysis: it thrives in systems where rules are local, but extraction is global.",
    calculation: {
      formula: "œï(A) = 0.12¬∑H + 0.16¬∑S + 0.14¬∑B + 0.08¬∑W + Œ≥(Seq,ùìî)",
      weights: { w1: 0.12, w2: 0.16, w3: 0.14, w4: 0.08 },
      variables: {
        H: "Hard operator intensity coefficient",
        S: "Soft operator configuration depth",
        B: "Black operator masking strength", 
        W: "White operator transparency level",
        gamma: "Aggregation complexity modifier"
      }
    },
    impact: "Combines minor actions into significant cumulative exposure."
  }
];
